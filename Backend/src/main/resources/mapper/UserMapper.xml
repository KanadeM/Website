<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mengsoft.webbackend.dao.UserMapper">
  <resultMap id="BaseResultMap" type="org.mengsoft.webbackend.model.User">
    <constructor>
      <idArg column="USER_ID" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="USER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="NICKNAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="EMAIL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MOBILE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PASSWORD" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="ROLE" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    USER_ID, USER_NAME, NICKNAME, EMAIL, MOBILE, PASSWORD, ROLE
  </sql>
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BASE_USER_INFO
    where USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from BASE_USER_INFO
    where USER_ID = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.mengsoft.webbackend.model.User">
    insert into BASE_USER_INFO (USER_ID, USER_NAME, NICKNAME, 
      EMAIL, MOBILE, PASSWORD, 
      ROLE)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.mengsoft.webbackend.model.User">
    insert into BASE_USER_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="mobile != null">
        MOBILE,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="role != null">
        ROLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.mengsoft.webbackend.model.User">
    update BASE_USER_INFO
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=CHAR},
      </if>
      <if test="role != null">
        ROLE = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mengsoft.webbackend.model.User">
    update BASE_USER_INFO
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=CHAR},
      ROLE = #{role,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
</mapper>